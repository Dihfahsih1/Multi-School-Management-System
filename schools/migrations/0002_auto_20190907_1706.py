# Generated by Django 2.2.4 on 2019-09-07 14:06

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='Is_View_on_Web',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='bio',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='birth_date',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='blood_group',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='duty',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='email',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='facebook_url',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='full_name',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='gender',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='google_plus_url',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='instagram_url',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='linkedIn_url',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='national_ID',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='other_info',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='permanent_address',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='phone',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='photo',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='pinterest_url',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='present_address',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='religion',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='responsibility',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='resume',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='roles',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='salary_grade',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='salary_type',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='twitter_url',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='username',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='youtube_url',
        ),
        migrations.RemoveField(
            model_name='user',
            name='school',
        ),
        migrations.AddField(
            model_name='teacher',
            name='user',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='user',
            name='duty',
            field=models.CharField(choices=[('Admin', 'Admin'), ('Teacher', 'Teacher'), ('Others', 'Others')], default=1, max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=30, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('Superuser', 'Superuser')], default=1, max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.CharField(choices=[('Teacher', 'Teacher')], default=1, max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
