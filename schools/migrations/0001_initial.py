# Generated by Django 2.1.7 on 2019-09-09 13:30

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('national_ID', models.CharField(max_length=100, null=True)),
                ('phone', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=100)),
                ('role', models.CharField(choices=[('Superuser', 'Superuser')], max_length=100)),
                ('roles', models.CharField(choices=[('Teacher', 'Teacher')], max_length=100)),
                ('duty', models.CharField(choices=[('Admin', 'Admin'), ('Teacher', 'Teacher'), ('Others', 'Others')], max_length=100)),
                ('religion', models.CharField(choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Others', 'Others')], max_length=100)),
                ('present_address', models.CharField(max_length=100)),
                ('permanent_address', models.CharField(max_length=100)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=100)),
                ('birth_date', models.DateField(null=True)),
                ('resume', models.FileField(upload_to='resume/')),
                ('bio', models.CharField(max_length=200)),
                ('responsibility', models.CharField(max_length=200)),
                ('salary_type', models.CharField(choices=[('Monthly', 'Monthly'), ('Hourly', 'Hourly')], max_length=100)),
                ('facebook_url', models.CharField(max_length=130)),
                ('twitter_url', models.CharField(max_length=130)),
                ('linkedIn_url', models.CharField(max_length=130)),
                ('google_plus_url', models.CharField(max_length=130)),
                ('youtube_url', models.CharField(max_length=130)),
                ('instagram_url', models.CharField(max_length=130)),
                ('pinterest_url', models.CharField(max_length=130)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('profession', models.CharField(max_length=100)),
                ('admission_no', models.CharField(max_length=100)),
                ('admission_date', models.DateField(null=True)),
                ('relation_With_Guardian', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Sister', 'Sister'), ('Bother', 'Bother'), ('Uncle', 'Uncle'), ('Maternal Uncle', 'Maternal Uncle'), ('Aunt', 'Aunt'), ('Other Relative', 'Other Relative')], max_length=100)),
                ('group', models.CharField(choices=[('Science', 'Science'), ('Arts', 'Arts'), ('Commerce', 'Commerce')], max_length=100)),
                ('roll_no', models.CharField(max_length=100)),
                ('registration_no', models.CharField(max_length=100)),
                ('discount', models.CharField(max_length=100)),
                ('second_language', models.CharField(max_length=100)),
                ('previous_school', models.CharField(max_length=100)),
                ('previous_class', models.CharField(max_length=100)),
                ('transfer_certificate', models.FileField(null=True, upload_to='certificates/')),
                ('father_name', models.CharField(max_length=100)),
                ('father_phone', models.CharField(max_length=100)),
                ('father_education', models.CharField(max_length=100)),
                ('father_profession', models.CharField(max_length=100)),
                ('father_designation', models.CharField(max_length=100)),
                ('father_photo', models.FileField(null=True, upload_to='avatar/')),
                ('mother_name', models.CharField(max_length=100)),
                ('mother_phone', models.CharField(max_length=100)),
                ('mother_education', models.CharField(max_length=100)),
                ('mother_profession', models.CharField(max_length=100)),
                ('mother_designation', models.CharField(max_length=100)),
                ('mother_photo', models.FileField(null=True, upload_to='avatar/')),
                ('health_condition', models.CharField(max_length=100)),
                ('other_info', models.TextField(max_length=200)),
                ('photo', models.ImageField(upload_to='avatars/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('joining_date', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_guardian', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_accountant', models.BooleanField(default=False)),
                ('is_librarian', models.BooleanField(default=False)),
                ('is_receptionist', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AbsentEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('absent_user', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('template', models.CharField(max_length=100)),
                ('absent_date', models.DateField(null=True)),
                ('subject', models.CharField(max_length=100)),
                ('email_body', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='AbsentSMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('absent_user', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('template', models.CharField(max_length=100)),
                ('absent_date', models.DateField(null=True)),
                ('SMS', models.TextField(max_length=300)),
                ('gateway', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_title', models.CharField(max_length=100)),
                ('deadline', models.DateField(null=True)),
                ('assignment', models.FileField(null=True, upload_to='assignment/')),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_title', models.CharField(max_length=100)),
                ('book_ID', models.CharField(max_length=100)),
                ('ISBN_no', models.CharField(max_length=100)),
                ('edition', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=100)),
                ('price', models.CharField(max_length=100)),
                ('quantity', models.CharField(max_length=100)),
                ('almira_no', models.CharField(max_length=100)),
                ('book_cover', models.FileField(upload_to='cover')),
            ],
        ),
        migrations.CreateModel(
            name='BulkInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(max_length=100)),
                ('student_name', models.CharField(max_length=100)),
                ('is_discount_applicable', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('month', models.DateField(max_length=100)),
                ('paid_status', models.CharField(choices=[('Paid', 'Paid'), ('Pending', 'Pending')], max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='BulkStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CertificateType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_name', models.CharField(max_length=100)),
                ('school_name', models.CharField(max_length=100)),
                ('certificate_text', models.TextField(max_length=400)),
                ('footer_left_text', models.CharField(max_length=100)),
                ('footer_middle_text', models.CharField(max_length=100)),
                ('footer_right_text', models.CharField(max_length=100)),
                ('background', models.FileField(null=True, upload_to='background/')),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.CharField(max_length=130)),
                ('numeric_name', models.CharField(max_length=130)),
                ('note', models.CharField(max_length=130)),
            ],
            options={
                'verbose_name': ('classroom',),
                'verbose_name_plural': 'classrooms',
                'ordering': ('classroom',),
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=130)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('amount', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='DueFeeEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_role', models.CharField(choices=[('Guardian', 'Guardian'), ('Student', 'Student')], max_length=100)),
                ('due_fee_student', models.CharField(max_length=100)),
                ('template', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('email_body', models.TextField(max_length=300)),
                ('attachment', models.FileField(null=True, upload_to='attachment/')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='DueFeeSMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(choices=[('Guardian', 'Guardian'), ('Student', 'Student')], max_length=100)),
                ('due_fee_student', models.CharField(max_length=100)),
                ('template', models.CharField(max_length=100)),
                ('SMS', models.TextField(max_length=300)),
                ('gateway', models.CharField(max_length=100)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('receiver', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('email_body', models.TextField(max_length=300)),
                ('attachment', models.FileField(null=True, upload_to='attachment/')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(max_length=100)),
                ('event_for', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('event_place', models.CharField(max_length=100)),
                ('from_date', models.DateField(null=True)),
                ('to_date', models.DateField(null=True)),
                ('image', models.FileField(null=True, upload_to='images/')),
                ('note', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_title', models.CharField(max_length=100)),
                ('start_date', models.DateField(null=True)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='ExamAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='ExamGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_grade', models.CharField(max_length=100)),
                ('grade_point', models.CharField(max_length=100)),
                ('mark_from', models.CharField(max_length=100)),
                ('mark_to', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='ExamSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField(null=True)),
                ('start_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('room_no', models.CharField(max_length=300)),
                ('note', models.TextField(max_length=300)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSuggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestion_title', models.CharField(max_length=300)),
                ('suggestion', models.FileField(null=True, upload_to='suggestion/')),
                ('note', models.TextField(max_length=300)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='Expenditure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expenditure_method', models.CharField(max_length=100)),
                ('amount', models.CharField(max_length=100)),
                ('date', models.DateField(null=True)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenditureHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expenditure_head', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='FeeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(choices=[('General Fee', 'General Fee'), ('Hostel', 'Hostel'), ('Transport', 'Transport')], max_length=100)),
                ('fee_title', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_title', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GenerateCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.CertificateType')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holiday_title', models.CharField(max_length=100)),
                ('from_date', models.DateField(null=True)),
                ('to_date', models.DateField(null=True)),
                ('note', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostel_name', models.CharField(max_length=100)),
                ('hostel_type', models.CharField(choices=[('Single - Boys', 'Single - Boys'), ('Single - Girls', 'Single - Girls'), ('Mixed', 'Mixed')], max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='HostelMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(null=True, upload_to='avatar/')),
                ('roll_no', models.CharField(max_length=100)),
                ('room_no', models.CharField(max_length=100)),
                ('room_type', models.CharField(choices=[('AC', 'AC'), ('Non AC', 'Non AC')], max_length=100)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('hostel_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Hostel')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_image', models.FileField(null=True, upload_to='images/')),
                ('image_caption', models.CharField(max_length=100)),
                ('gallery_title', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Gallery')),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(max_length=100)),
                ('amount', models.CharField(max_length=100)),
                ('date', models.DateField(null=True)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('income_head', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(max_length=100)),
                ('fee_amount', models.CharField(max_length=100)),
                ('discount', models.CharField(max_length=100)),
                ('month', models.DateField(max_length=100)),
                ('is_discount_applicable', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('paid_status', models.CharField(choices=[('Paid', 'Paid'), ('Pending', 'Pending')], max_length=100)),
                ('gross_amount', models.CharField(max_length=100)),
                ('invoice_number', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
                ('date', models.DateField(null=True)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ISBN_no', models.CharField(max_length=100)),
                ('edition', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=100)),
                ('price', models.CharField(max_length=100)),
                ('quantity', models.CharField(max_length=100)),
                ('almira_no', models.CharField(max_length=100)),
                ('book_cover', models.FileField(null=True, upload_to='cover/')),
                ('issue_date', models.DateField(null=True)),
                ('due_date', models.DateField(null=True)),
                ('return_date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(null=True, upload_to='avatar/')),
                ('library_ID', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('classroom', models.CharField(max_length=100)),
                ('section', models.CharField(max_length=100)),
                ('roll_no', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_title', models.CharField(max_length=100)),
                ('date', models.DateField(null=True)),
                ('image', models.FileField(null=True, upload_to='images/')),
                ('news', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice_title', models.CharField(max_length=100)),
                ('date', models.DateField(null=True)),
                ('notice_for', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('notice', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_location', models.CharField(choices=[('Header', 'Header'), ('Footer', 'Footer')], max_length=100)),
                ('page_title', models.CharField(max_length=100)),
                ('page_description', models.TextField(max_length=300)),
                ('page_image', models.FileField(null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running_session', models.CharField(max_length=100)),
                ('promote_to_session', models.CharField(max_length=100)),
                ('promote_to_class', models.CharField(max_length=100)),
                ('current_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('color', models.CharField(default='#007bff', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_no', models.CharField(max_length=100)),
                ('room_type', models.CharField(choices=[('AC', 'AC'), ('Non AC', 'Non AC')], max_length=100)),
                ('seat_total', models.CharField(max_length=100)),
                ('cost_per_seat', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
                ('hostel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Hostel')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_title', models.CharField(max_length=100)),
                ('route_start', models.CharField(max_length=100)),
                ('route_end', models.CharField(max_length=100)),
                ('vehicle_for_route', models.CharField(max_length=100)),
                ('stop_name', models.CharField(max_length=100)),
                ('stop_km', models.CharField(max_length=100)),
                ('stop_fare', models.CharField(max_length=100)),
                ('note', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Routine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=130)),
                ('subject_name', models.CharField(max_length=130)),
                ('day', models.CharField(choices=[('Saturday', 'Saturday'), ('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday')], max_length=100)),
                ('start_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('room_no', models.CharField(max_length=130)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_name', models.CharField(max_length=100)),
                ('basic_salary', models.CharField(max_length=100)),
                ('house_rent', models.CharField(max_length=100)),
                ('transport_allowance', models.CharField(max_length=100)),
                ('medical_allowance', models.CharField(max_length=100)),
                ('over_time_hourly_pay', models.CharField(max_length=100)),
                ('provident_fund', models.CharField(max_length=100)),
                ('hourly_rate', models.CharField(max_length=100)),
                ('total_allowance', models.CharField(max_length=100)),
                ('total_deduction', models.CharField(max_length=100)),
                ('gross_salary', models.CharField(max_length=100)),
                ('net_salary', models.CharField(max_length=100)),
                ('note', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_code', models.CharField(max_length=130)),
                ('school_name', models.CharField(max_length=130)),
                ('address', models.CharField(max_length=130)),
                ('phone', models.CharField(max_length=130)),
                ('registration_date', models.DateField(null=True)),
                ('email_address', models.EmailField(max_length=120)),
                ('fax', models.CharField(max_length=130)),
                ('footer', models.CharField(max_length=130)),
                ('currency', models.CharField(max_length=130)),
                ('currency_symbol', models.CharField(max_length=130)),
                ('session_start_month', models.CharField(choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('September', 'September'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=130)),
                ('session_end_month', models.CharField(choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('September', 'September'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=130)),
                ('academic_year', models.CharField(default='', max_length=100)),
                ('enable_frontend', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=130)),
                ('exam_final_result', models.CharField(choices=[('Average of all exams', 'Average of all exams'), ('Only based on final exams', 'Only based on final exams')], max_length=130)),
                ('latitude', models.CharField(max_length=130)),
                ('longitude', models.CharField(max_length=130)),
                ('facebook_url', models.CharField(max_length=130)),
                ('twitter_url', models.CharField(max_length=130)),
                ('linkedIn_url', models.CharField(max_length=130)),
                ('google_plus_url', models.CharField(max_length=130)),
                ('youtube_url', models.CharField(max_length=130)),
                ('instagram_url', models.CharField(max_length=130)),
                ('pinterest_url', models.CharField(max_length=130)),
                ('logo', models.FileField(upload_to='avatars/')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], max_length=130)),
                ('theme', models.CharField(choices=[('Black', 'Black'), ('Navy Blue', 'Navy Blue'), ('Red', 'Red'), ('Maroon', 'Maroon')], max_length=130)),
            ],
            options={
                'verbose_name': 'school',
                'verbose_name_plural': 'schools',
                'ordering': ('school_name',),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=130)),
                ('note', models.CharField(max_length=130)),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': 'sections',
                'ordering': ('section',),
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slider_image', models.FileField(null=True, upload_to='sliders/')),
                ('image_title', models.CharField(max_length=100)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
            ],
        ),
        migrations.CreateModel(
            name='SMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('receiver', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('SMS', models.TextField(max_length=300)),
                ('gateway', models.CharField(max_length=100)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=130)),
                ('subject_code', models.CharField(max_length=130)),
                ('author', models.CharField(max_length=130)),
                ('type', models.CharField(choices=[('Mandatory', 'Mandatory'), ('Optional', 'Optional')], max_length=100)),
                ('note', models.TextField(max_length=250)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
            ],
        ),
        migrations.CreateModel(
            name='Superuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='superuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('syllabus_title', models.CharField(max_length=130)),
                ('syllabus', models.FileField(null=True, upload_to='syllabus/')),
                ('note', models.TextField(max_length=250)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
                ('subject_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
            ],
        ),
        migrations.CreateModel(
            name='TransportMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(null=True, upload_to='avatar/')),
                ('roll_no', models.CharField(max_length=100)),
                ('transport_route_name', models.CharField(max_length=100)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number', models.CharField(max_length=100)),
                ('vehicle_model', models.CharField(max_length=100)),
                ('driver', models.CharField(max_length=100)),
                ('vehicle_licence', models.CharField(max_length=100)),
                ('vehicle_contact', models.CharField(max_length=100)),
                ('note', models.CharField(max_length=100)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('coming_from', models.CharField(max_length=100)),
                ('to_meet_user_type', models.CharField(choices=[('Admin', 'Admin'), ('Guardian', 'Guardian'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Accountant', 'Accountant'), ('Librarian', 'Librarian'), ('Receptionist', 'Receptionist'), ('Staff', 'Staff'), ('Servant', 'Servant'), ('General Accountant', 'General Accountant')], max_length=100)),
                ('to_meet_user', models.CharField(max_length=100)),
                ('reason_to_meet', models.CharField(choices=[('Vendor', 'Vendor'), ('Guardian', 'Guardian'), ('Relative', 'Relative'), ('Friend', 'Friend'), ('Family', 'Family'), ('Interview', 'Interview'), ('Meeting', 'Meeting'), ('Other', 'Other')], max_length=100)),
                ('check_in', models.TimeField(null=True)),
                ('check_out', models.TimeField(null=True)),
                ('note', models.TextField(max_length=300)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(choices=[('July 2020', 'June 2021'), ('July 2021', 'June 2022'), ('July 2022', 'June 2023'), ('July 2023', 'June 2024')], max_length=130)),
                ('is_running', models.BooleanField(default=False)),
                ('note', models.TextField(max_length=300)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School')),
            ],
        ),
        migrations.AddField(
            model_name='syllabus',
            name='year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Year'),
        ),
        migrations.AddField(
            model_name='subject',
            name='subject_teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Teacher'),
        ),
        migrations.AddField(
            model_name='section',
            name='class_teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Teacher'),
        ),
        migrations.AddField(
            model_name='section',
            name='classroom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom'),
        ),
        migrations.AddField(
            model_name='section',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='salarygrade',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='routine',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='routine',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Teacher'),
        ),
        migrations.AddField(
            model_name='route',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='room',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='promotion',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='page',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='notice',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='news',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='librarymember',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='issue',
            name='library_member',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.LibraryMember'),
        ),
        migrations.AddField(
            model_name='issue',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='issue',
            name='select_book',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Book'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student'),
        ),
        migrations.AddField(
            model_name='incomehead',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='income',
            name='income_head',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.IncomeHead'),
        ),
        migrations.AddField(
            model_name='income',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='image',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='hostelmember',
            name='name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student'),
        ),
        migrations.AddField(
            model_name='hostelmember',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='hostelmember',
            name='section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section'),
        ),
        migrations.AddField(
            model_name='hostel',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='holiday',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='guardian',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='guardian',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guardians', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='generatecertificate',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='generatecertificate',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject'),
        ),
        migrations.AddField(
            model_name='gallery',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='feetype',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='expenditurehead',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='expenditure',
            name='expenditure_head',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.ExpenditureHead'),
        ),
        migrations.AddField(
            model_name='expenditure',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='examsuggestion',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='examsuggestion',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject'),
        ),
        migrations.AddField(
            model_name='examschedule',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='examschedule',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject'),
        ),
        migrations.AddField(
            model_name='examgrade',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='examattendance',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='examattendance',
            name='section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section'),
        ),
        migrations.AddField(
            model_name='examattendance',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject'),
        ),
        migrations.AddField(
            model_name='exam',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='event',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='employeeattendance',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='employee',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='email',
            name='school_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='duefeesms',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='duefeeemail',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='discount',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='designation',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='class_teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Teacher'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='certificatetype',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='bulkstudent',
            name='classroom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom'),
        ),
        migrations.AddField(
            model_name='bulkstudent',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='bulkstudent',
            name='section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section'),
        ),
        migrations.AddField(
            model_name='bulkinvoice',
            name='classroom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom'),
        ),
        migrations.AddField(
            model_name='bulkinvoice',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='book',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='classroom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject'),
        ),
        migrations.AddField(
            model_name='admin',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='admin',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='absentsms',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='absentemail',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.School'),
        ),
        migrations.AddField(
            model_name='user',
            name='classroom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom'),
        ),
        migrations.AddField(
            model_name='user',
            name='designation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Designation'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='guardian',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guardians', to='schools.Guardian'),
        ),
        migrations.AddField(
            model_name='user',
            name='salary_grade',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.SalaryGrade'),
        ),
        migrations.AddField(
            model_name='user',
            name='section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
